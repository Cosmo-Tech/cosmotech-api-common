Index: build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Copyright (c) Cosmo Tech.\n// Licensed under the MIT license.\nimport com.diffplug.gradle.spotless.SpotlessExtension\nimport io.gitlab.arturbosch.detekt.Detekt\nimport pl.allegro.tech.build.axion.release.domain.TagNameSerializationConfig\n\nplugins {\n  val kotlinVersion = \"1.6.0\"\n  kotlin(\"jvm\") version kotlinVersion\n  id(\"com.diffplug.spotless\") version \"6.4.2\"\n  id(\"org.springframework.boot\") version \"2.7.0\" apply false\n  id(\"io.gitlab.arturbosch.detekt\") version \"1.19.0\"\n  id(\"pl.allegro.tech.build.axion-release\") version \"1.13.6\"\n  `maven-publish`\n  // Apply the java-library plugin for API and implementation separation.\n  `java-library`\n}\n\nscmVersion { tag(closureOf<TagNameSerializationConfig> { prefix = \"\" }) }\n\nval kotlinJvmTarget = 17\n\njava { toolchain { languageVersion.set(JavaLanguageVersion.of(kotlinJvmTarget)) } }\n\npublishing {\n  publications {\n    create<MavenPublication>(\"maven\") {\n      groupId = \"com.github.Cosmo-Tech\"\n      artifactId = \"cosmotech-api-common\"\n      version = scmVersion.version\n\n      from(components[\"java\"])\n    }\n  }\n}\n\nrepositories {\n  // Use Maven Central for resolving dependencies.\n  mavenCentral()\n}\n\nconfigure<SpotlessExtension> {\n  isEnforceCheck = false\n\n  val licenseHeaderComment =\n      \"\"\"\n        // Copyright (c) Cosmo Tech.\n        // Licensed under the MIT license.\n      \"\"\".trimIndent()\n\n  java {\n    googleJavaFormat()\n    target(\"**/*.java\")\n    licenseHeader(licenseHeaderComment)\n  }\n  kotlin {\n    ktfmt(\"0.30\")\n    target(\"**/*.kt\")\n    licenseHeader(licenseHeaderComment)\n  }\n  kotlinGradle {\n    ktfmt(\"0.30\")\n    target(\"**/*.kts\")\n    //      licenseHeader(licenseHeaderComment, \"import\")\n  }\n}\n\ntasks.withType<Detekt>().configureEach {\n  buildUponDefaultConfig = true // preconfigure defaults\n  allRules = false // activate all available (even unstable) rules.\n  config.from(file(\"$rootDir/.detekt/detekt.yaml\"))\n  jvmTarget = kotlinJvmTarget.toString()\n  ignoreFailures = project.findProperty(\"detekt.ignoreFailures\")?.toString()?.toBoolean() ?: false\n  // Specify the base path for file paths in the formatted reports.\n  // If not set, all file paths reported will be absolute file path.\n  // This is so we can easily map results onto their source files in tools like GitHub Code\n  // Scanning\n  basePath = rootDir.absolutePath\n  reports {\n    html {\n      // observe findings in your browser with structure and code snippets\n      required.set(true)\n      outputLocation.set(file(\"$buildDir/reports/detekt/${project.name}-detekt.html\"))\n    }\n    xml {\n      // checkstyle like format mainly for integrations like Jenkins\n      required.set(false)\n      outputLocation.set(file(\"$buildDir/reports/detekt/${project.name}-detekt.xml\"))\n    }\n    txt {\n      // similar to the console output, contains issue signature to manually edit baseline files\n      required.set(true)\n      outputLocation.set(file(\"$buildDir/reports/detekt/${project.name}-detekt.txt\"))\n    }\n    sarif {\n      // standardized SARIF format (https://sarifweb.azurewebsites.net/) to support integrations\n      // with Github Code Scanning\n      required.set(true)\n      outputLocation.set(file(\"$buildDir/reports/detekt/${project.name}-detekt.sarif\"))\n    }\n  }\n}\n\ntasks.jar {\n  manifest {\n    attributes(\n        mapOf(\"Implementation-Title\" to project.name, \"Implementation-Version\" to project.version))\n  }\n}\n\n// Dependencies version\n// Implementation\nval swaggerParserVersion = \"2.0.31\"\nval hashidsVersion = \"1.0.3\"\nval springOauthAutoConfigureVersion = \"2.6.6\"\nval springSecurityJwtVersion = \"1.1.1.RELEASE\"\nval springBootStarterWebVersion = \"2.7.0\"\nval springDocVersion = \"1.6.6\"\nval springOauthVersion = \"5.7.1\"\nval zalandoSpringProblemVersion = \"0.27.0\"\nval servletApiVersion = \"4.0.1\"\nval oktaSpringBootVersion = \"2.1.5\"\nval azureSpringBootBomVersion = \"3.14.0\"\n\n// Tests\nval jUnitBomVersion = \"5.8.2\"\nval mockkVersion = \"1.12.4\"\nval awaitilityKVersion = \"4.2.0\"\n\ndependencies {\n  implementation(platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES))\n\n  // Workaround until Detekt adds support for JVM Target 17\n  // See https://github.com/detekt/detekt/issues/4287\n  detekt(\"io.gitlab.arturbosch.detekt:detekt-cli:1.19.0\")\n  detekt(\"org.jetbrains.kotlin:kotlin-compiler-embeddable:1.6.21\")\n\n  // Align versions of all Kotlin components\n  implementation(platform(\"org.jetbrains.kotlin:kotlin-bom\"))\n\n  // Use the Kotlin JDK 8 standard library.\n  implementation(\"org.jetbrains.kotlin:kotlin-stdlib-jdk8\")\n\n  implementation(\"org.hashids:hashids:${hashidsVersion}\")\n\n  implementation(\"io.swagger.parser.v3:swagger-parser-v3:${swaggerParserVersion}\")\n\n  implementation(\n      \"org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:${springOauthAutoConfigureVersion}\")\n  implementation(\"org.springframework.security:spring-security-jwt:${springSecurityJwtVersion}\")\n\n  implementation(\"org.springframework.boot:spring-boot-starter-web\") {\n    exclude(group = \"org.springframework.boot\", module = \"spring-boot-starter-tomcat\")\n  }\n\n  implementation(\"org.springdoc:springdoc-openapi-ui:${springDocVersion}\")\n  implementation(\"org.springdoc:springdoc-openapi-kotlin:${springDocVersion}\")\n  implementation(\"org.zalando:problem-spring-web-starter:${zalandoSpringProblemVersion}\")\n  implementation(\"javax.servlet:javax.servlet-api:${servletApiVersion}\")\n  implementation(\"org.springframework.boot:spring-boot-starter-security\")\n  implementation(\"org.springframework.security:spring-security-oauth2-jose:${springOauthVersion}\")\n  implementation(\n      \"org.springframework.security:spring-security-oauth2-resource-server:${springOauthVersion}\")\n  implementation(\"com.okta.spring:okta-spring-boot-starter:${oktaSpringBootVersion}\")\n\n  implementation(\"org.springframework.boot:spring-boot-starter-actuator\")\n  implementation(\"io.micrometer:micrometer-registry-prometheus\")\n  implementation(\"org.springframework.boot:spring-boot-starter-aop\")\n\n  testImplementation(kotlin(\"test\"))\n  testImplementation(platform(\"org.junit:junit-bom:${jUnitBomVersion}\"))\n  testImplementation(\"org.junit.jupiter:junit-jupiter\")\n  testImplementation(\"io.mockk:mockk:${mockkVersion}\")\n  testImplementation(\"org.awaitility:awaitility-kotlin:${awaitilityKVersion}\")\n\n  // Use the Kotlin test library.\n  testImplementation(\"org.jetbrains.kotlin:kotlin-test\")\n\n  // Use the Kotlin JUnit integration.\n  testImplementation(\"org.jetbrains.kotlin:kotlin-test-junit\")\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle.kts b/build.gradle.kts
--- a/build.gradle.kts	(revision b0ac5e73e31403def1df718b6834e1cb4df52d57)
+++ b/build.gradle.kts	(date 1662639781336)
@@ -8,7 +8,7 @@
   val kotlinVersion = "1.6.0"
   kotlin("jvm") version kotlinVersion
   id("com.diffplug.spotless") version "6.4.2"
-  id("org.springframework.boot") version "2.7.0" apply false
+  id("org.springframework.boot") version "2.7.2" apply false
   id("io.gitlab.arturbosch.detekt") version "1.19.0"
   id("pl.allegro.tech.build.axion-release") version "1.13.6"
   `maven-publish`
@@ -149,10 +149,6 @@
       "org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:${springOauthAutoConfigureVersion}")
   implementation("org.springframework.security:spring-security-jwt:${springSecurityJwtVersion}")
 
-  implementation("org.springframework.boot:spring-boot-starter-web") {
-    exclude(group = "org.springframework.boot", module = "spring-boot-starter-tomcat")
-  }
-
   implementation("org.springdoc:springdoc-openapi-ui:${springDocVersion}")
   implementation("org.springdoc:springdoc-openapi-kotlin:${springDocVersion}")
   implementation("org.zalando:problem-spring-web-starter:${zalandoSpringProblemVersion}")
