name: Build, Test And Upgrade SNAPSHOT if needed

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [ main ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: gradle/gradle-build-action@v2
        with:
          cache-disabled: false
          # Cache storage space is limited for GitHub actions
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}
          arguments: |
            build
            -x test
            -x spotlessCheck
            -x detekt
            
      - name: Run unit tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: gradle/gradle-build-action@v2
        with:
          cache-disabled: false
          # Cache storage space is limited for GitHub actions
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}
          arguments: test -x spotlessCheck
          
  update_snapshot_and_package:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs:
      - build_and_test
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Clean Snapshot
        uses: dev-drprasad/delete-tag-and-release@v1.0
        if: ${{ endsWith(steps.previoustag.outputs.tag, '-SNAPSHOT') }}
        with:
          tag_name: ${{ steps.previoustag.outputs.tag }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create tag
        if: ${{ endsWith(steps.previoustag.outputs.tag, '-SNAPSHOT') }}
        uses: EndBug/latest-tag@latest
        with:
          ref: ${{ steps.previoustag.outputs.tag }}
          description: ${{ steps.previoustag.outputs.tag }}
            
      - name: Create Release
        if: ${{ endsWith(steps.previoustag.outputs.tag, '-SNAPSHOT') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ steps.previoustag.outputs.tag }}
        run: |
          gh release create "$TAG" \
              --title="$TAG" \
              --generate-notes

      - name: Set up JDK
        if: ${{ endsWith(steps.previoustag.outputs.tag, '-SNAPSHOT') }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Publish with Gradle
        if: ${{ endsWith(steps.previoustag.outputs.tag, '-SNAPSHOT') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.previoustag.outputs.tag }}
        uses: gradle/gradle-build-action@v2
        with:
          cache-disabled: true
          arguments: |
            publish
